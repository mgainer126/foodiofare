{"ast":null,"code":"var _jsxFileName = \"/Users/matthewgainer/Desktop/Brainstation/Assignments/assignments/matt-gainer-foodiofare/client/src/components/Map2/MapMarker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst markers = [{\n  id: 1,\n  name: \"Chicago, Illinois\",\n  position: {\n    lat: 41.881832,\n    lng: -87.623177\n  }\n}, {\n  id: 2,\n  name: \"Denver, Colorado\",\n  position: {\n    lat: 39.739235,\n    lng: -104.99025\n  }\n}, {\n  id: 3,\n  name: \"Los Angeles, California\",\n  position: {\n    lat: 34.052235,\n    lng: -118.243683\n  }\n}, {\n  id: 4,\n  name: \"New York, New York\",\n  position: {\n    lat: 40.712776,\n    lng: -74.005974\n  }\n}];\n\nfunction MapMarker() {\n  _s();\n\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  const handleActiveMarker = marker => {\n    if (marker === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(marker);\n  };\n\n  const handleOnLoad = map => {\n    const bounds = new google.maps.LatLngBounds();\n    markers.forEach(({\n      position\n    }) => bounds.extend(position));\n    map.fitBounds(bounds);\n  };\n\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    onLoad: handleOnLoad,\n    onClick: () => setActiveMarker(null),\n    mapContainerStyle: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: markers.map(({\n      id,\n      name,\n      position\n    }) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: position,\n      onClick: () => handleActiveMarker(id),\n      children: activeMarker === id ? /*#__PURE__*/_jsxDEV(InfoWindow, {\n        onCloseClick: () => setActiveMarker(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this) : null\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MapMarker, \"asO/RTU+815HqBfy3jKKoWM2Okg=\");\n\n_c = MapMarker;\nexport default MapMarker;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapMarker\");","map":{"version":3,"sources":["/Users/matthewgainer/Desktop/Brainstation/Assignments/assignments/matt-gainer-foodiofare/client/src/components/Map2/MapMarker.jsx"],"names":["React","useState","GoogleMap","InfoWindow","Marker","markers","id","name","position","lat","lng","MapMarker","activeMarker","setActiveMarker","handleActiveMarker","marker","handleOnLoad","map","bounds","google","maps","LatLngBounds","forEach","extend","fitBounds","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,MAAhC,QAA8C,wBAA9C;;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,mBAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE,CAAC;AAAxB;AAHZ,CADc,EAMd;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,kBAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE,CAAC;AAAxB;AAHZ,CANc,EAWd;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,yBAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE,CAAC;AAAxB;AAHZ,CAXc,EAgBd;AACEJ,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,oBAFR;AAGEC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE,CAAC;AAAxB;AAHZ,CAhBc,CAAhB;;AAuBA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMa,kBAAkB,GAAIC,MAAD,IAAY;AACrC,QAAIA,MAAM,KAAKH,YAAf,EAA6B;AAC3B;AACD;;AACDC,IAAAA,eAAe,CAACE,MAAD,CAAf;AACD,GALD;;AAOA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5B,UAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,YAAhB,EAAf;AACAhB,IAAAA,OAAO,CAACiB,OAAR,CAAgB,CAAC;AAAEd,MAAAA;AAAF,KAAD,KAAkBU,MAAM,CAACK,MAAP,CAAcf,QAAd,CAAlC;AACAS,IAAAA,GAAG,CAACO,SAAJ,CAAcN,MAAd;AACD,GAJD;;AAMA,sBACE,QAAC,SAAD;AACE,IAAA,MAAM,EAAEF,YADV;AAEE,IAAA,OAAO,EAAE,MAAMH,eAAe,CAAC,IAAD,CAFhC;AAGE,IAAA,iBAAiB,EAAE;AAAEY,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KAHrB;AAAA,cAKGrB,OAAO,CAACY,GAAR,CAAY,CAAC;AAAEX,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAAD,kBACX,QAAC,MAAD;AAEE,MAAA,QAAQ,EAAEA,QAFZ;AAGE,MAAA,OAAO,EAAE,MAAMM,kBAAkB,CAACR,EAAD,CAHnC;AAAA,gBAKGM,YAAY,KAAKN,EAAjB,gBACC,QAAC,UAAD;AAAY,QAAA,YAAY,EAAE,MAAMO,eAAe,CAAC,IAAD,CAA/C;AAAA,+BACE;AAAA,oBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAIG;AATN,OACOD,EADP;AAAA;AAAA;AAAA;AAAA,YADD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GArCQK,S;;KAAAA,S;AAuCT,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { GoogleMap, InfoWindow, Marker } from \"@react-google-maps/api\";\n\nconst markers = [\n  {\n    id: 1,\n    name: \"Chicago, Illinois\",\n    position: { lat: 41.881832, lng: -87.623177 },\n  },\n  {\n    id: 2,\n    name: \"Denver, Colorado\",\n    position: { lat: 39.739235, lng: -104.99025 },\n  },\n  {\n    id: 3,\n    name: \"Los Angeles, California\",\n    position: { lat: 34.052235, lng: -118.243683 },\n  },\n  {\n    id: 4,\n    name: \"New York, New York\",\n    position: { lat: 40.712776, lng: -74.005974 },\n  },\n];\n\nfunction MapMarker() {\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  const handleActiveMarker = (marker) => {\n    if (marker === activeMarker) {\n      return;\n    }\n    setActiveMarker(marker);\n  };\n\n  const handleOnLoad = (map) => {\n    const bounds = new google.maps.LatLngBounds();\n    markers.forEach(({ position }) => bounds.extend(position));\n    map.fitBounds(bounds);\n  };\n\n  return (\n    <GoogleMap\n      onLoad={handleOnLoad}\n      onClick={() => setActiveMarker(null)}\n      mapContainerStyle={{ width: \"100vw\", height: \"100vh\" }}\n    >\n      {markers.map(({ id, name, position }) => (\n        <Marker\n          key={id}\n          position={position}\n          onClick={() => handleActiveMarker(id)}\n        >\n          {activeMarker === id ? (\n            <InfoWindow onCloseClick={() => setActiveMarker(null)}>\n              <div>{name}</div>\n            </InfoWindow>\n          ) : null}\n        </Marker>\n      ))}\n    </GoogleMap>\n  );\n}\n\nexport default MapMarker;\n"]},"metadata":{},"sourceType":"module"}